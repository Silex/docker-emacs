inputs:
  secrets:
    required: true
  version:
    required: true
  context:
    required: true

runs:
  using: composite
  steps:
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ fromJSON(inputs.secrets).DOCKERHUB_USERNAME }}
        password: ${{ fromJSON(inputs.secrets).DOCKERHUB_TOKEN }}

    - name: Set up Docker
      shell: bash
      run: |
        sudo mkdir -p /etc/docker
        echo '{ "insecure-registries":["37.27.39.133:5000"], "registry-mirrors": ["http://37.27.39.133:5000"] }' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-config-inline: |
          insecure-entitlements = [ "network.host", "security.insecure" ]
          [registry."37.27.39.133:5000"]
            http = true
            insecure = true

    - uses: ruby/setup-ruby@v1

    - name: Setup variables
      id: data
      shell: bash
      run: |
        echo "tags=$(bin/images --json | jq -c '.images[] | select(.version == "${{ inputs.version }}" and .context == "${{ inputs.context }}") | .tags_with_repository')" >> $GITHUB_OUTPUT

    - name: Build image
      uses: docker/build-push-action@v5
      with:
        pull: true
        push: ${{ github.ref == 'refs/heads/master' }}
        cache-from: ${{ fromJSON(steps.data.outputs.tags)[0] }}
        cache-to: '"type=inline"'
        tags: ${{ join(fromJSON(steps.data.outputs.tags), ', ') }}
        context: images/${{ inputs.version }}/${{ inputs.context }}
